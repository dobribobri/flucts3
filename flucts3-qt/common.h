#ifndef COMMON_H
#define COMMON_H

#include <iostream>
#include <stdio.h>
#include <sstream>
#include <vector>
#include <complex>

#include <math.h>

#include <QString>

#include "ocean.h"
#include "dbase.h"
#include "rho.h"


std::string dtos(double i);

std::vector<std::string> __get_datetime(std::string filename);
std::string str_datetime(std::vector<std::string> _datetime);

// [ Parser
int push(std::string elem, std::vector<double>& array);

std::string remove_plus(std::string str);
// ]

#define dB2np 0.11512925465
#define costhk 0.5 /*0.5*/

// [ Gamma Oxygen & H2O
double gammaO2(double _freq /*GHz*/, double _Pressure = 1013 /*hPa*/, double _T = 15 /*Cels*/);
double gammaO2_t(double _freq /*GHz*/, DBase* _dbase);
double gammaH2O(double _freq /*GHz*/, double _Pressure = 1013/*hPa*/, double _T = 15/*Cels*/, double _rho = 7.5/*(g/m^3)*/);
double gammaH2O_t(double _freq /*GHz*/, DBase* _dbase);
// ]

// [ T_lamda -> Tau_full
double tau_t(double _T_lamda /*K*/, double _T_avg /*Cels*/);
double tau_t(double _T_lamda /*K*/, DBase *_dbase);
// ]

// [ Tau_O2
double tauO2_t(double _freq /*GHz*/, DBase* _dbase);
// ]

// [ EpsC, Eps0, EpsInf
// From  "Ocean"
// ]

/*Krho_1013_15_15_7.5_2_0.52
const double KPHI[201] = {0.0005124, 0.000602573, 0.000701803, 0.000810816, 0.000930395,
                  0.00106139, 0.00120472, 0.00136139, 0.00153248, 0.00171918,
                  0.00192276, 0.00214463, 0.00238631, 0.00264947, 0.00293594,
                  0.0032477, 0.00358694, 0.00395606, 0.00435766, 0.00479464,
                  0.00527017, 0.00578772, 0.00635115, 0.00696467, 0.00763295,
                  0.00836114, 0.00915492, 0.0100206, 0.010965, 0.0119959, 0.0131218,
                  0.0143518, 0.0156965, 0.0171671, 0.018776, 0.0205371, 0.0224653,
                  0.0245769, 0.0268895, 0.0294222, 0.0321951, 0.0352297, 0.0385479,
                  0.0421719, 0.0461236, 0.0504233, 0.0550886, 0.0601324, 0.0655607,
                  0.0713702, 0.0775444, 0.0840507, 0.0908363, 0.0978251, 0.104915,
                  0.111979, 0.118863, 0.125396, 0.131396, 0.13668, 0.141082, 0.144465,
                  0.146736, 0.147848, 0.14781, 0.146679, 0.144556, 0.141569, 0.137866,
                  0.133599, 0.128916, 0.123953, 0.118829, 0.113646, 0.108486, 0.103412,
                  0.0984733, 0.0937045, 0.0891292, 0.0847617, 0.0806092, 0.0766733,
                  0.0729516, 0.0694389, 0.0661277, 0.0630093, 0.0600742, 0.0573124,
                  0.0547139, 0.0522688, 0.0499676, 0.047801, 0.0457601, 0.0438367,
                  0.042023, 0.0403116, 0.0386958, 0.037169, 0.0357255, 0.0343598,
                  0.0330667, 0.0318415, 0.0306799, 0.0295779, 0.0285317, 0.0275379,
                  0.0265932, 0.0256948, 0.0248398, 0.0240257, 0.0232502, 0.0225111,
                  0.0218064, 0.0211341, 0.0204926, 0.0198802, 0.0192955, 0.0187369,
                  0.0182032, 0.0176932, 0.0172057, 0.0167397, 0.0162942, 0.0158683,
                  0.0154611, 0.0150717, 0.0146995, 0.0143437, 0.0140037, 0.0136788,
                  0.0133684, 0.0130721, 0.0127892, 0.0125194, 0.0122621, 0.0120169,
                  0.0117834, 0.0115613, 0.0113502, 0.0111497, 0.0109596, 0.0107795,
                  0.0106091, 0.0104482, 0.0102966, 0.0101539, 0.01002, 0.00989473,
                  0.00977777, 0.00966899, 0.00956821, 0.00947525, 0.00938995,
                  0.00931217, 0.00924176, 0.00917859, 0.00912253, 0.00907345,
                  0.00903124, 0.0089958, 0.00896701, 0.00894479, 0.00892904,
                  0.00891967, 0.0089166, 0.00891975, 0.00892906, 0.00894444,
                  0.00896583, 0.00899317, 0.00902639, 0.00906546, 0.0091103,
                  0.00916087, 0.00921712, 0.00927902, 0.0093465, 0.00941955,
                  0.00949811, 0.00958215, 0.00967164, 0.00976655, 0.00986685,
                  0.00997251, 0.0100835, 0.0101998, 0.0103214, 0.0104483, 0.0105804,
                  0.0107177, 0.0108602, 0.011008, 0.0111609, 0.011319, 0.0114822,
                  0.0116506, 0.0118241, 0.0120027, 0.0121865, 0.0123753, 0.0125693};
*/
/*Krho_1013_15_-2_7.5_2_0*/
const double KPHI[201] = {0.00565832, 0.00595008, 0.00625432, 0.00657171, 0.006903,
                          0.00724898, 0.00761051, 0.00798855, 0.00838411, 0.00879832,
                          0.00923239, 0.00968766, 0.0101656, 0.0106677, 0.0111958, 0.0117518,
                          0.0123378, 0.012956, 0.013609, 0.0142996, 0.0150307, 0.0158059,
                          0.0166287, 0.0175034, 0.0184344, 0.0194267, 0.0204859, 0.0216182,
                          0.0228303, 0.0241299, 0.0255251, 0.0270255, 0.028641, 0.0303832,
                          0.0322645, 0.0342988, 0.0365012, 0.0388883, 0.0414782, 0.0442906,
                          0.0473465, 0.0506684, 0.0542795, 0.058204, 0.0624658, 0.0670879,
                          0.0720907, 0.0774906, 0.0832973, 0.0895113, 0.0961197, 0.103093,
                          0.11038, 0.117904, 0.125562, 0.133219, 0.140712, 0.147857, 0.154455,
                          0.160308, 0.165232, 0.169077, 0.171741, 0.173176, 0.173397, 0.172471,
                          0.170513, 0.167668, 0.164102, 0.15998, 0.155462, 0.150692, 0.145795,
                          0.140875, 0.136014, 0.131273, 0.126701, 0.122327, 0.118173, 0.11425,
                          0.11056, 0.107104, 0.103877, 0.100869, 0.098073, 0.0954775,
                          0.0930717, 0.0908445, 0.0887848, 0.086882, 0.0851258, 0.0835063,
                          0.0820143, 0.0806413, 0.0793789, 0.0782198, 0.0771569, 0.0761837,
                          0.0752943, 0.0744829, 0.0737447, 0.0730746, 0.0724685, 0.0719222,
                          0.0714321, 0.0709946, 0.0706067, 0.0702652, 0.0699676, 0.0697113,
                          0.069494, 0.0693134, 0.0691677, 0.0690549, 0.0689733, 0.0689213,
                          0.0688974, 0.0689003, 0.0689285, 0.068981, 0.0690566, 0.0691542,
                          0.0692729, 0.0694118, 0.0695699, 0.0697465, 0.0699408, 0.0701521,
                          0.0703799, 0.0706233, 0.0708819, 0.0711551, 0.0714423, 0.0717432,
                          0.0720571, 0.0723838, 0.0727228, 0.0730737, 0.0734361, 0.0738097,
                          0.0741942, 0.0745892, 0.0749945, 0.0754098, 0.0758348, 0.0762693,
                          0.0767131, 0.0771659, 0.0776274, 0.0780976, 0.0785762, 0.079063,
                          0.0795579, 0.0800606, 0.0805711, 0.0810891, 0.0816146, 0.0821474,
                          0.0826874, 0.0832344, 0.0837883, 0.084349, 0.0849165, 0.0854905,
                          0.086071, 0.086658, 0.0872512, 0.0878507, 0.0884563, 0.0890679,
                          0.0896856, 0.0903091, 0.0909385, 0.0915737, 0.0922145, 0.092861,
                          0.0935131, 0.0941707, 0.0948338, 0.0955023, 0.0961762, 0.0968553,
                          0.0975398, 0.0982295, 0.0989243, 0.0996243, 0.100329, 0.10104,
                          0.101755, 0.102475, 0.1032, 0.10393, 0.104665, 0.105405, 0.106149,
                          0.106899, 0.107653, 0.108412, 0.109175, 0.109943, 0.110716};

// [ K_phi & K_w
double k_phi(double _freq /*GHz*/);
double k_phi_t(double _freq /*GHz*/, DBase* _dbase);
double k_w(double _freq /*GHz*/, double _T_obl);
double k_w_t(double _freq /*GHz*/, double _T_lamda_oblaka, DBase* _dbase);
// ]

double tau(double _freq /*GHz*/, DBase* _dbase);


#endif // COMMON_H
